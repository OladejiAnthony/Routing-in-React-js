#Routing in React

Installation - 
Routing us also to identify and work on the ACTIVE PAGE.

a. isActive Property -
 We use the isActive property in the <NavLink /> component to reveal our Active Links when nevigating through pages.
 Note - you dont have to put the isACtive property in all your Links, just put in the first NavLink and it will affect other NavLinks in the samwe file.

b. Navigate Component -
    We use the <Navigate /> component to redirect users to a particular page.
    The <Navigate /> component is also used during Authorization of Pages for Protected Routes.
 
c. Nested Routes - 
    Nested Routes is about placing a Route in a Page that is already routed. e.g localhost:3000/About/info
    We make use of the "Routes" and "Route" components inside your Page to specify the new route.
    Then in your App component, write the fflg to add your new page to your About:
    <Route path="/about/*" element={<About />} />
    UseCases -
    1. Sending newsletter link to specific user e.g localhost:3000/About/info
    2. Authorization - redirecting a user to a particular page and u want to add a specific info/data to that page that pertains to the  user alone.

c. useParams Hook -
    We use it to display the details of a product, blog etc on button click.
    we use it whenever we want to access & display the properties of our Data Array(or API) in a Single page based on specificity, without actually creating many js files to display them one by one.
    E.g Displaying the details of a particluar blog, product, user etc from the Blogs Data/API.
    <Route path="/blog/:id" element={<BlogDetails />} />
    //Open the Blog Page using the id property.
    then, <Link to={`/blog/${id}`}>Read More</Link>

    